---
- name: Configuring DRBD
  template:
    src: etc/drbd.d/global_common.conf.j2
    dest: /etc/drbd.d/global_common.conf
    owner: root
    group: root
    mode: "u=rw,g=r,o=r"
  become: true

- name: Loading DRBD Kernel Module
  modprobe:
    name: drbd
    state: present
  become: true
  register: _drbd_kernel_module
  ignore_errors: true

- name: Reboot system
  shell: sleep 2 && shutdown -r now "Ansible triggered reboot"
  async: 1
  poll: 0
  ignore_errors: true
  when: _drbd_kernel_module.failed or _disable_selinux.changed
  register: _rebooted

- name: Wait for system to boot up
  local_action: wait_for host={{ ansible_ssh_host }} state=started
  when: _rebooted.changed

- name: Loading DRBD Kernel Module after the reboot
  modprobe:
    name: drbd
    state: present
  become: true
  register: _drbd_kernel_module
  when: _rebooted.changed

- name: Checking DRBD Mirror Devices Creation Status
  stat:
    path: "/etc/drbd.d/.{{ item['resource'] }}.created"
  register: _drbd_mirror_device_creation_status
  with_items: "{{ drbd_disks }}"

- name: Creating DRBD Mirror Devices
  command: drbdadm create-md {{ item['item']['resource'] }}
  become: true
  register: _drbd_mirror_device_created
  with_items: "{{ _drbd_mirror_device_creation_status['results'] }}"
  when: not item['stat']['exists']

- name: Marking DRDB Mirror Devices Created
  file:
    path: "/etc/drbd.d/.{{ item['item']['item']['resource'] }}.created"
    state: touch
  become: true
  with_items: "{{ _drbd_mirror_device_created['results'] }}"
  when: item['changed']

- name: Bringing DRBD Mirror Devices Up
  command: drbdadm up {{ item['resource'] }}
  become: true
  register: _drbd_mirror_device_up
  with_items: "{{ drbd_disks}}"
  when: >
        _drbd_mirror_device_created['changed']

- name: Defining DRBD Primary
  command: drbdadm -- --overwrite-data-of-peer primary {{ item['resource'] }}/0
  become: true
  register: _drbd_primary
  with_items: "{{ drbd_disks }}"
  when: >
        _drbd_mirror_device_up['changed'] and
        inventory_hostname == groups[drbd_group][0]

- name: Waiting For DRBD Sync To Complete
  command: drbd-overview
  become: true
  register: _drbd_sync
  until: ('Inconsistent' not in _drbd_sync['stdout'])
  retries: 100
  delay: 30
  when: >
        _drbd_primary['changed'] and
        inventory_hostname == groups[drbd_group][0]

- name: Partitioning DRBD Device
  filesystem:
    fstype: "{{ item['filesystem'] }}"
    dev: "{{ item['device'] }}"
  become: true
  with_items: "{{ drbd_disks }}"
  when: >
        inventory_hostname == groups[drbd_group][0] and
        _drbd_sync['changed']

- name: Creating DRBD Mountpoint
  file:
    path: "{{ item['mountpoint'] }}"
    state: directory
  become: true
  with_items: "{{ drbd_disks }}"

- name: Mounting {{ item['device'] }} on {{ item['mountpoint'] }}
  command: mount {{ item['device'] }} {{ item['mountpoint'] }}
  become: true
  with_items: "{{ drbd_disks }}"
  when: inventory_hostname == groups[drbd_group][0]
  ignore_errors: true
